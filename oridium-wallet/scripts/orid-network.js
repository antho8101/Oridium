const API_BASE = "https://oridium-production.up.railway.app";

// üîÅ R√©cup√®re la blockchain compl√®te
export async function getBlockchain() {
  try {
    const res = await fetch(`${API_BASE}/blockchain`);
    return await res.json();
  } catch (err) {
    console.error("‚ùå Failed to fetch blockchain:", err);
    return [];
  }
}

// üí∞ R√©cup√®re le solde d'une adresse
export async function getBalance(address) {
  try {
    const res = await fetch(`${API_BASE}/balance/${address}`);
    const data = await res.json();
    return data.balance || 0;
  } catch (err) {
    console.error("‚ùå Failed to fetch balance:", err);
    return 0;
  }
}

// ‚ûï Soumet un bloc min√©
export async function submitBlock(block) {
  try {
    const res = await fetch(`${API_BASE}/add-block`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(block),
    });

    const result = await res.json();
    if (result.success) {
      console.log("‚úÖ Block submitted to server");
    } else {
      console.warn("‚ö†Ô∏è Server responded but block was not accepted");
    }
  } catch (err) {
    console.error("‚ùå Failed to submit block:", err);
  }
}

// üÜï Enregistre un wallet
export async function registerWallet(address) {
  try {
    const res = await fetch(`${API_BASE}/register-wallet`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ address }),
    });
    const data = await res.json();
    console.log("‚úÖ Wallet registered:", data);
  } catch (err) {
    console.error("‚ùå Failed to register wallet:", err);
  }
}

// ‚úÖ Pour acc√®s dans la console (debug)
if (typeof window !== "undefined") {
  window.getBlockchain = getBlockchain;
  window.getBalance = getBalance;
  window.submitBlock = submitBlock;
  window.registerWallet = registerWallet;
  console.log("üü¢ orid-network.js expos√© globalement");
}
